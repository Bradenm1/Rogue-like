#pragma once
#include "Sprite.h"

public enum EObjects 
{
	//DOORS
	BASIC_WOOD_DOOR, BASIC_STEEL_DOOR, BASIC_JAIL_DOOR_STEEL, BASIC_JAIL_DOOR_GOLD, BLANK_01, STEEL_PORTAL_DOOR_CLOSED,
	SIDE_BASIC_WOOD_DOOR, SIDE_BASIC_STEEL_DOOR, SIDE_BASIC_JAIL_DOOR_STEEL, SIDE_BASIC_JAIL_DOOR_GOLD, BLANK_02, STEEL_PORTAL_DOOR_OPEN,
	STEEL_CHAINED_BASIC_WOOD_DOOR, STEEL_CHAINED_BASIC_STEEL_DOOR, STEEL_CHAINED_BASIC_JAIL_DOOR_STEEL, STEEL_CHAINED_BASIC_JAIL_DOOR_GOLD, STEEL_CHAINS, GOLD_PORTAL_DOOR_CLOSED,
	STEEL_CHAINED_SIDE_BASIC_WOOD_DOOR, STEEL_CHAINED_SIDE_BASIC_STEEL_DOOR, STEEL_CHAINED_SIDE_BASIC_JAIL_DOOR_STEEL, STEEL_CHAINED_SIDE_BASIC_JAIL_DOOR_GOLD, STEEL_SIDE_CHAINS, GOLD_PORTAL_DOOR_OPEN,
	GOLD_CHAINED_BASIC_WOOD_DOOR, GOLD_CHAINED_BASIC_STEEL_DOOR, GOLD_CHAINED_BASIC_JAIL_DOOR_STEEL, GOLD_CHAINED_BASIC_JAIL_DOOR_GOLD, GOLD_CHAINS, SKY_PORTAL_DOOR_CLOSED,
	GOLD_CHAINED_SIDE_BASIC_WOOD_DOOR, GOLD_CHAINED_SIDE_BASIC_STEEL_DOOR, GOLD_CHAINED_SIDE_BASIC_JAIL_DOOR_STEEL, GOLD_CHAINED_SIDE_BASIC_JAIL_DOOR_GOLD, GOLD_SIDE_CHAINS, SKY_PORTAL_DOOR_OPEN,
	BASIC_WOOD_DOOR_FRAME, BASIC_STEEL_DOOR_FRAME, BASIC_JAIL_DOOR_STEEL_FRAME, BASIC_JAIL_DOOR_GOLD_FRAME, BLANK_04, HELL_PORTAL_DOOR_CLOSED,
	BASIC_WOOD_DOOR_BROKEN, BASIC_STEEL_DOOR_BROKEN, BASIC_JAIL_DOOR_STEEL_BROKEN, BASIC_JAIL_DOOR_GOLD_BROKEN, BLANK_05, HELL_PORTAL_DOOR_OPEN, 
	
	//TRAPS
	ARROW_TRAP_ICON, WATER_TRAP_ICON, ICEING_TRAP_ICON, SPARES_TRAP_FULL, BLANK_06, SHOCKING_TRAP_ICON, HEATING_TRAP_ICON, DONT_KNOW_TRAP_ICON01,
	SPARES_TRAP_HALF, BLANK_07, FALLING_TRAP_ICON, DONT_KNOW_TRAP_ICON02, UNDER_FLOOR_TRAP_NO_SPICKS, SMALL_SPICKS_TRAP_FULL, BLANK_08, DONT_KNOW_TRAP_ICON03,
	DONT_KNOW_TRAP_ICON04, UNDER_FLOOR_TRAP_SPICKS, SMALL_SPICKS_TRAP_HALF, BLANK_09, BEAR_TRAP_ICON, DONT_KNOW_TRAP_ICON05, UNDER_FLOOR_TRAP_ROUND_HOLE, SPICKS_TRAP_FULL,

	//ENUM LENGTH
	ENUM_LENGTH_OBJECTS
};

public enum EObjectType
{
	DOOR, TRAP, EFFECTS
};

public enum EDamageType
{
	FULL, HALF, NON
};

//==================================================================================
// This class is used to hold all the objects in the game and controls them
//==================================================================================
ref class Objects : public Sprite
{
private:
	EObjects object;
	EObjectType typeObject;
	EDamageType DamageType;
	int frameToDamageOn;
	int damageAmount;

public:
	Objects(Graphics ^ startCanvas, TileMap ^ startTilemap, Random ^ startRGen, array<Bitmap^>^ startSpriteSheets, Logger ^ startLogger, EObjects startObject, EObjectType startTypeObject);

	virtual void draw(int forcedX, int forcedY) override;
	virtual void move() override;
	bool objectTouch();
	bool objectUse();

	void getObjectStats();

	EObjectType getObjectType() { return typeObject; }
	int getDamageAmount() { return damageAmount; }
};

